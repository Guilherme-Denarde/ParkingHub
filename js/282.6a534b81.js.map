{"version":3,"file":"js/282.6a534b81.js","mappings":"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","sources":["webpack://parkinghub_v1.0/./src/views/Movement.vue?2c77","webpack://parkinghub_v1.0/./src/views/Movement.vue?0a87","webpack://parkinghub_v1.0/./src/views/Movement.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-550ae31a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Movements\", -1))\nconst _hoisted_3 = { class: \"input-section\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Select a plate\", -1))\nconst _hoisted_5 = [\"value\"]\nconst _hoisted_6 = { class: \"movements-table\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Vehicle\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Conductor\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Register\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Active\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Departure\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Action\")\n  ])\n], -1))\nconst _hoisted_8 = [\"onClick\", \"disabled\"]\nconst _hoisted_9 = {\n  key: 0,\n  class: \"report-popup\"\n}\nconst _hoisted_10 = { class: \"report-content\" }\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Report\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.newMovementPlate) = $event)),\n        class: \"plate-input\"\n      }, [\n        _hoisted_4,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.vehicles, (vehicle) => {\n          return (_openBlock(), _createElementBlock(\"option\", {\n            key: vehicle.id,\n            value: vehicle.plate\n          }, _toDisplayString(vehicle.plate), 9, _hoisted_5))\n        }), 128))\n      ], 512), [\n        [_vModelSelect, _ctx.newMovementPlate]\n      ]),\n      _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.newMovementConductorCPF) = $event)),\n        placeholder: \"Conductor CPF\",\n        class: \"cpf-input\"\n      }, null, 512), [\n        [_vModelText, _ctx.newMovementConductorCPF]\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.createMovement && _ctx.createMovement(...args))),\n        class: \"add-button\"\n      }, \"Add Movement\")\n    ]),\n    _createElementVNode(\"table\", _hoisted_6, [\n      _hoisted_7,\n      _createElementVNode(\"tbody\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.movements, (movement) => {\n          return (_openBlock(), _createElementBlock(\"tr\", {\n            key: movement.id,\n            class: _normalizeClass({ 'gray-row': movement.departure !== '' })\n          }, [\n            _createElementVNode(\"td\", null, _toDisplayString(movement.vehiclePlate), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(movement.conductorCPF), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(movement.register), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(movement.active), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(movement.departure), 1),\n            _createElementVNode(\"td\", null, [\n              _createElementVNode(\"button\", {\n                onClick: ($event: any) => {_ctx.openReportPopup(); _ctx.updateDeparture(movement)},\n                disabled: movement.departure !== '',\n                class: \"departure-button\"\n              }, \"Departure\", 8, _hoisted_8)\n            ])\n          ], 2))\n        }), 128))\n      ])\n    ]),\n    (_ctx.showReportPopup)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n          _createElementVNode(\"div\", _hoisted_10, [\n            _hoisted_11,\n            _createElementVNode(\"p\", null, _toDisplayString(_ctx.currentMovementReport), 1),\n            _createElementVNode(\"button\", {\n              onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.closeReportPopup && _ctx.closeReportPopup(...args))),\n              class: \"close-button\"\n            }, \"Close\")\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","\nimport { defineComponent, ref, onMounted } from 'vue';\nimport Report from '@/components/Report.vue';\n\ninterface Vehicle {\n  id: number;\n  plate: string;\n}\n\ninterface Movement {\n  id: number;\n  vehiclePlate: string;\n  conductorCPF: string;\n  register: string;\n  active: boolean;\n  departure: string;\n  report: string; // Add report property to the Movement interface\n}\n\nexport default defineComponent({\n  setup() {\n    const newMovementPlate = ref(\"\");\n    const newMovementConductorCPF = ref(\"\");\n    const vehicles = ref<Vehicle[]>([]);\n    const movements = ref<Movement[]>([]);\n    const showReportPopup = ref(false);\n    const currentMovementReport = ref(\"\");\n    let db: IDBDatabase;\n\n    const dbRequest = window.indexedDB.open(\"movementDatabase\", 1);\n\n    onMounted(() => {\n      dbRequest.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n        db = (event.target as IDBOpenDBRequest).result as IDBDatabase;\n        const vehicleStore = db.createObjectStore(\"vehicles\", { keyPath: \"id\", autoIncrement: true });\n        vehicleStore.createIndex(\"plate\", \"plate\", { unique: true });\n\n        const conductorStore = db.createObjectStore(\"conductors\", { keyPath: \"id\", autoIncrement: true });\n        conductorStore.createIndex(\"cpf\", \"cpf\", { unique: true });\n\n        db.createObjectStore(\"movements\", { keyPath: \"id\", autoIncrement: true });\n      };\n\n      dbRequest.onsuccess = (event: Event) => {\n        db = (event.target as IDBOpenDBRequest).result as IDBDatabase;\n        fetchVehicles();\n        fetchMovements();\n      };\n    });\n\n    const fetchVehicles = () => {\n      const transaction = db.transaction(\"vehicles\", \"readonly\");\n      const objectStore = transaction.objectStore(\"vehicles\");\n      const getRequest = objectStore.getAll();\n\n      getRequest.onsuccess = (event: Event) => {\n        vehicles.value = (event.target as IDBRequest).result as Vehicle[];\n      };\n    };\n\n    const fetchMovements = () => {\n      const transaction = db.transaction(\"movements\", \"readonly\");\n      const objectStore = transaction.objectStore(\"movements\");\n      const getRequest = objectStore.getAll();\n\n      getRequest.onsuccess = (event: Event) => {\n        movements.value = (event.target as IDBRequest).result as Movement[];\n      };\n    };\n\n    const createMovement = () => {\n      const transaction = db.transaction([\"movements\", \"conductors\"], \"readwrite\");\n      const movementStore = transaction.objectStore(\"movements\");\n      const conductorStore = transaction.objectStore(\"conductors\");\n\n      // Check if conductor CPF exists in the database\n      const conductorCPF = newMovementConductorCPF.value;\n      const getRequest = conductorStore.index(\"cpf\").get(conductorCPF);\n\n      getRequest.onsuccess = (event: Event) => {\n        const conductor = (event.target as IDBRequest).result;\n        if (conductor) {\n          const newMovement: Movement = {\n            id: Date.now(),\n            vehiclePlate: newMovementPlate.value,\n            conductorCPF,\n            register: new Date().toLocaleString(),\n            active: true,\n            departure: \"\",\n            report: generateReportText(newMovementPlate.value, conductorCPF) // Generate the report text\n          };\n          movementStore.add(newMovement);\n\n          newMovementPlate.value = \"\";\n          newMovementConductorCPF.value = \"\";\n          fetchMovements();\n        } else {\n          alert(\"Conductor not found in the database\");\n        }\n      };\n    };\n\n    const updateDeparture = (movement: Movement) => {\n      if (movement.active) {\n        const transaction = db.transaction(\"movements\", \"readwrite\");\n        const objectStore = transaction.objectStore(\"movements\");\n        const updatedMovement = { ...movement };\n        updatedMovement.departure = new Date().toLocaleString();\n        updatedMovement.active = false;\n        objectStore.put(updatedMovement);\n\n        fetchMovements();\n\n        generateReport(updatedMovement);\n      }\n    };\n\n    const generateReport = (movement: Movement) => {\n      console.log(\"teste\");\n      \n      // const conductor = getConductorByCPF(movement.conductorCPF)\n  //   .then((conductor) => {\n  //     if (!conductor) {\n  //       alert(\"Conductor not found in the database\");\n  //       return;\n  //     }\n  //     const totalTime = calculateTotalTime(conductor.enter, conductor.departure);\n\n  //     const report = `Report for movement ID ${movement.id}:\\n\\n` +\n  //       `Vehicle: ${movement.vehiclePlate}\\n` +\n  //       `Conductor: ${conductor.name}\\n` +\n  //       `CPF: ${movement.conductorCPF}\\n` +\n  //       `Register: ${movement.register}\\n` +\n  //       `Active: ${movement.active}\\n` +\n  //       `Departure: ${movement.departure}\\n` +\n  //       `Total Time: ${totalTime}`;\n\n  //     currentMovementReport.value = report;\n  //     showReportPopup.value = true;\n  //   })\n  //   .catch((error) => {\n  //     console.error(\"Error fetching conductor details:\", error);\n  //     alert(\"An error occurred while generating the report\");\n  //   });\n};\n\n\n\n    const generateReportText =  (vehiclePlate: string, conductorCPF: string) => {\n  // const conductor = await getConductorByCPF(conductorCPF);\n\n  // if (!conductor) {\n  //   return \"Conductor not found in the database\";\n  // }\n\n  // const totalTime = calculateTotalTime(conductor.enter, conductor.departure);\n\n  return `Report for movement:\\n\\n` \n    // `Name: ${conductor.name}\\n` +\n    // `CPF: ${conductorCPF}\\n`\n    // `Enter: ${conductor.enter}\\n` +\n    // `Departure: ${conductor.departure}\\n` +\n    // `Total Time: ${totalTime}`\n    ;\n};\n\n\nconst calculateTotalTime = (enter: string, departure: string): string => {\n  const enterTime = new Date(enter).getTime();\n  const departureTime = new Date(departure).getTime();\n  const totalTimeInMillis = departureTime - enterTime;\n\n  // Calculate hours, minutes, and seconds from total milliseconds\n  const hours = Math.floor(totalTimeInMillis / (1000 * 60 * 60));\n  const minutes = Math.floor((totalTimeInMillis % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((totalTimeInMillis % (1000 * 60)) / 1000);\n\n  return `${hours}h ${minutes}m ${seconds}s`;\n};\n\nconst getConductorByCPF = (cpf: string): Promise<any> => {\n\n  return new Promise((resolve, reject) => {\n    const transaction = db.transaction(\"movementDatabase\", \"readonly\");\n    const objectStore = transaction.objectStore(\"conductors\");\n    const index = objectStore.index(\"cpf\");\n    const getRequest = index.get(cpf);\n\n    getRequest.onsuccess = (event: Event) => {\n      const conductor = (event.target as IDBRequest).result;\n      resolve(conductor);\n    };\n\n    getRequest.onerror = (event: Event) => {\n      reject(event);\n    };\n  });\n};\n\n    const openReportPopup = () => {\n      showReportPopup.value = true;\n    };\n\n    const closeReportPopup = () => {\n      showReportPopup.value = false;\n    };\n\n    return {\n      newMovementPlate,\n      newMovementConductorCPF,\n      vehicles,\n      movements,\n      showReportPopup,\n      currentMovementReport,\n      createMovement,\n      updateDeparture,\n      openReportPopup,\n      closeReportPopup\n    };\n  }\n});\n\n","import { render } from \"./Movement.vue?vue&type=template&id=550ae31a&scoped=true&ts=true\"\nimport script from \"./Movement.vue?vue&type=script&lang=ts\"\nexport * from \"./Movement.vue?vue&type=script&lang=ts\"\n\nimport \"./Movement.vue?vue&type=style&index=0&id=550ae31a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-550ae31a\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","disabled","value","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","key","_hoisted_10","_hoisted_11","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_withDirectives","$event","newMovementPlate","_Fragment","_renderList","vehicles","vehicle","id","plate","_toDisplayString","_vModelSelect","newMovementConductorCPF","placeholder","_vModelText","onClick","args","createMovement","movements","movement","_normalizeClass","departure","vehiclePlate","conductorCPF","register","active","openReportPopup","updateDeparture","showReportPopup","currentMovementReport","closeReportPopup","_createCommentVNode","defineComponent","setup","ref","db","dbRequest","window","indexedDB","open","onMounted","onupgradeneeded","event","target","result","vehicleStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","conductorStore","onsuccess","fetchVehicles","fetchMovements","transaction","objectStore","getRequest","getAll","movementStore","index","get","conductor","newMovement","Date","now","toLocaleString","report","generateReportText","add","alert","updatedMovement","put","generateReport","console","log","__exports__"],"sourceRoot":""}
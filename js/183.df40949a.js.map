{"version":3,"file":"js/183.df40949a.js","mappings":"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","sources":["webpack://parkinghub_v1.0/./src/views/Model.vue?37bb","webpack://parkinghub_v1.0/./src/views/Model.vue?a110","webpack://parkinghub_v1.0/./src/views/Model.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5aeed7c0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Models\", -1))\nconst _hoisted_3 = { class: \"input-section\" }\nconst _hoisted_4 = { class: \"models-table\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Brand Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Model Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")\n  ])\n], -1))\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = [\"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _withDirectives(_createElementVNode(\"input\", {\n        class: \"brand-input\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.newBrandName) = $event)),\n        placeholder: \"Brand Name\"\n      }, null, 512), [\n        [_vModelText, _ctx.newBrandName]\n      ]),\n      _withDirectives(_createElementVNode(\"input\", {\n        class: \"model-input\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.newModelName) = $event)),\n        placeholder: \"Model Name\"\n      }, null, 512), [\n        [_vModelText, _ctx.newModelName]\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.createModel && _ctx.createModel(...args))),\n        class: \"add-button\"\n      }, \"Add Model\")\n    ]),\n    _createElementVNode(\"table\", _hoisted_4, [\n      _hoisted_5,\n      _createElementVNode(\"tbody\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.models, (model) => {\n          return (_openBlock(), _createElementBlock(\"tr\", {\n            key: model.id\n          }, [\n            _createElementVNode(\"td\", null, _toDisplayString(model.brand ? model.brand.name : 'Marca nÃ£o definida'), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(model.name), 1),\n            _createElementVNode(\"td\", null, [\n              _createElementVNode(\"button\", {\n                onClick: ($event: any) => (_ctx.updateModelInDB(model.id)),\n                class: \"action-button\"\n              }, \"Update\", 8, _hoisted_6),\n              _createElementVNode(\"button\", {\n                onClick: ($event: any) => (_ctx.deleteModelFromDB(model.id)),\n                class: \"action-button\"\n              }, \"Delete\", 8, _hoisted_7)\n            ])\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}","\nimport { defineComponent, ref, onMounted } from 'vue';\n\nexport default defineComponent({\n  setup() {\n    const newBrandName = ref<string>('');\n    const newModelName = ref<string>('');\n    const models = ref<any[]>([]);\n    let db: any;\n\n    const dbRequest = window.indexedDB.open('movementDatabase', 1);\n\n    dbRequest.onupgradeneeded = function (event: any) {\n      db = event.target.result;\n      if (db) {\n        const objectStore = db.createObjectStore('models', { keyPath: 'id', autoIncrement: true });\n        // objectStore.createIndex('brand', 'brand', { unique: false });\n        objectStore.createIndex('name', 'name', { unique: false });\n        objectStore.createIndex('register', 'register', { unique: false });\n        objectStore.createIndex('update', 'update', { unique: false });\n        objectStore.createIndex('active', 'active', { unique: false });\n      }\n    };\n\n    dbRequest.onsuccess = function (event: any) {\n      db = event.target.result;\n      fetchModelsFromDB();\n    };\n\n    const addModelToDB = (brand: any, name: string): void => {\n      if (!db) return;\n      const transaction = db.transaction(['models'], 'readwrite'); // Update the object store name to 'brands'\n      const objectStore = transaction.objectStore('models'); // Update the object store name to 'brands'\n      const register = new Date().toLocaleTimeString();\n      const model = {\n        brand: brand,\n        name: name,\n        register: register,\n        update: null,\n        active: true,\n      };\n      objectStore.add(model);\n      fetchModelsFromDB();\n    };\n\n    const updateModelInDB = (id: number): void => {\n      if (!db) return;\n      const transaction = db.transaction(['models'], 'readwrite'); // Update the object store name to 'brands'\n      const objectStore = transaction.objectStore('models'); // Update the object store name to 'brands'\n      const getRequest = objectStore.get(id);\n\n      getRequest.onsuccess = function () {\n        const data = getRequest.result;\n        const updatedBrandName = prompt('Enter the updated brand name:', data.brand);\n        const updatedModelName = prompt('Enter the updated model name:', data.name);\n        if (updatedBrandName && updatedModelName) {\n          data.brand = updatedBrandName;\n          data.name = updatedModelName;\n          data.update = new Date();\n          objectStore.put(data);\n          fetchModelsFromDB();\n        }\n      };\n    };\n\n    const deleteModelFromDB = (id: number): void => {\n      if (!db) return;\n      const transaction = db.transaction(['models'], 'readwrite'); // Update the object store name to 'brands'\n      const objectStore = transaction.objectStore('models'); // Update the object store name to 'brands'\n      objectStore.delete(id);\n      fetchModelsFromDB();\n    };\n\n    const fetchModelsFromDB = (): void => {\n      if (!db) return;\n      const transaction = db.transaction(['models'], 'readonly'); // Update the object store name to 'brands'\n      const objectStore = transaction.objectStore('models'); // Update the object store name to 'brands'\n      const getRequest = objectStore.getAll();\n\n      getRequest.onsuccess = function (event: any) {\n        models.value = event.target.result;\n      };\n    };\n\n    const createModel = (): void => {\n      if (newBrandName.value.trim() === '' || newModelName.value.trim() === '') return;\n\n      // Vamos buscar a marca pelo nome antes de criar o modelo\n      const brandTransaction = db.transaction(['brands'], 'readonly');\n      const brandObjectStore = brandTransaction.objectStore('brands');\n      const brandIndex = brandObjectStore.index('name');\n      const brandRequest = brandIndex.get(newBrandName.value);\n\n      brandRequest.onsuccess = function (event: any) {\n        const brand = event.target.result;\n        if (brand) {\n          // Se encontrarmos a marca, podemos criar o modelo com ela\n          addModelToDB(brand, newModelName.value);\n          newBrandName.value = '';\n          newModelName.value = '';\n        } else {\n          alert('Marca nÃ£o encontrada. Por favor, insira um nome de marca vÃ¡lido.');\n        }\n      };\n    };\n\n    onMounted(fetchModelsFromDB);\n\n    return {\n      newBrandName,\n      newModelName,\n      models,\n      createModel,\n      updateModelInDB,\n      deleteModelFromDB,\n    };\n  },\n});\n","import { render } from \"./Model.vue?vue&type=template&id=5aeed7c0&scoped=true&ts=true\"\nimport script from \"./Model.vue?vue&type=script&lang=ts\"\nexport * from \"./Model.vue?vue&type=script&lang=ts\"\n\nimport \"./Model.vue?vue&type=style&index=0&id=5aeed7c0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5aeed7c0\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_withDirectives","$event","newBrandName","placeholder","_vModelText","newModelName","onClick","args","createModel","_Fragment","_renderList","models","model","key","id","_toDisplayString","brand","name","updateModelInDB","deleteModelFromDB","defineComponent","setup","ref","db","dbRequest","window","indexedDB","open","onupgradeneeded","event","target","result","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","onsuccess","fetchModelsFromDB","addModelToDB","transaction","register","Date","toLocaleTimeString","update","active","add","getRequest","get","data","updatedBrandName","prompt","updatedModelName","put","delete","getAll","value","trim","brandTransaction","brandObjectStore","brandIndex","index","brandRequest","alert","onMounted","__exports__"],"sourceRoot":""}
{"version":3,"file":"js/637.732e4159.js","mappings":"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","sources":["webpack://parkinghub_v1.0/./src/views/Vehicle.vue?da96","webpack://parkinghub_v1.0/./src/views/Vehicle.vue?1e46","webpack://parkinghub_v1.0/./src/views/Vehicle.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2879cb66\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Vehicles\", -1))\nconst _hoisted_3 = { class: \"input-section\" }\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = [\"value\"]\nconst _hoisted_6 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"Red\\\" data-v-2879cb66>Red</option><option value=\\\"Blue\\\" data-v-2879cb66>Blue</option><option value=\\\"Green\\\" data-v-2879cb66>Green</option><option value=\\\"Yellow\\\" data-v-2879cb66>Yellow</option><option value=\\\"Black\\\" data-v-2879cb66>Black</option><option value=\\\"White\\\" data-v-2879cb66>White</option>\", 6)\nconst _hoisted_12 = [\n  _hoisted_6\n]\nconst _hoisted_13 = { class: \"vehicles-table\" }\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Brand\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Model\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Color\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Plate\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")\n  ])\n], -1))\nconst _hoisted_15 = [\"onClick\"]\nconst _hoisted_16 = [\"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.newVehicleBrandId) = $event)),\n        class: \"brand-input\"\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.brands, (brand) => {\n          return (_openBlock(), _createElementBlock(\"option\", {\n            key: brand.id,\n            value: brand.id\n          }, _toDisplayString(brand.name), 9, _hoisted_4))\n        }), 128))\n      ], 512), [\n        [_vModelSelect, _ctx.newVehicleBrandId]\n      ]),\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.newVehicleModelId) = $event)),\n        class: \"brand-input\"\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.models, (model) => {\n          return (_openBlock(), _createElementBlock(\"option\", {\n            key: model.id,\n            value: model.id\n          }, _toDisplayString(model.name), 9, _hoisted_5))\n        }), 128))\n      ], 512), [\n        [_vModelSelect, _ctx.newVehicleModelId]\n      ]),\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.newVehicleColor) = $event)),\n        class: \"color-select\"\n      }, _hoisted_12, 512), [\n        [_vModelSelect, _ctx.newVehicleColor]\n      ]),\n      _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.newVehiclePlate) = $event)),\n        placeholder: \"Plate\",\n        class: \"plate-input\"\n      }, null, 512), [\n        [_vModelText, _ctx.newVehiclePlate]\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.createVehicle && _ctx.createVehicle(...args))),\n        class: \"add-button\"\n      }, \"Add Vehicle\")\n    ]),\n    _createElementVNode(\"table\", _hoisted_13, [\n      _hoisted_14,\n      _createElementVNode(\"tbody\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.vehicles, (vehicle, index) => {\n          return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n            _createElementVNode(\"td\", null, _toDisplayString(_ctx.getBrandNameById(vehicle.brand)), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(_ctx.getModelNameById(vehicle.model)), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(vehicle.color), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(vehicle.plate), 1),\n            _createElementVNode(\"td\", null, [\n              _createElementVNode(\"button\", {\n                onClick: ($event: any) => (_ctx.updateVehicleInDB(vehicle)),\n                class: \"add\"\n              }, \"Editar\", 8, _hoisted_15),\n              _createElementVNode(\"button\", {\n                onClick: ($event: any) => (_ctx.deleteVehicleFromDB(vehicle.id))\n              }, \"Excluir\", 8, _hoisted_16)\n            ])\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}","\n\nimport { defineComponent, ref, onMounted } from 'vue';\n\ntype Brand = {\n  id: number;\n  name: string;\n};\n\ntype Model = {\n  id: number;\n  name: string;\n};\n\nexport default defineComponent({\n  setup() {\n    const newVehicleBrandId = ref(null);\n    const newVehicleModelId = ref(null);\n    const brands = ref<Brand[]>([]);\n    const models = ref<Model[]>([]);\n    const newVehicleBrand = ref('');\n    const newVehicleModel = ref('');\n    const newVehicleColor = ref('Red');\n    const newVehiclePlate = ref('');\n    const vehicles = ref<any[]>([]);\n    let db: any;\n\n    const dbRequest = window.indexedDB.open('movementDatabase', 1);\n\n    dbRequest.onupgradeneeded = function (event: any) {\n      db = event.target.result;\n      if (db) {\n        if (!db.objectStoreNames.contains('vehicles')) {\n          const vehicleStore = db.createObjectStore('vehicles', { keyPath: 'id', autoIncrement: true });\n          vehicleStore.createIndex('brand', 'brand', { unique: false });\n          vehicleStore.createIndex('model', 'model', { unique: false });\n          vehicleStore.createIndex('color', 'color', { unique: false });\n          vehicleStore.createIndex('plate', 'plate', { unique: false });\n          vehicleStore.createIndex('register', 'register', { unique: false });\n          vehicleStore.createIndex('update', 'update', { unique: false });\n          vehicleStore.createIndex('active', 'active', { unique: false });\n        }\n      }\n    };\n\n    dbRequest.onsuccess = function (event: any) {\n      db = event.target.result;\n      fetchVehiclesFromDB();\n    };\n\n\n    const fetchBrandsFromDB = (): void => {\n      if (!db) return;\n      const transaction = db.transaction(['brands'], 'readonly');\n      const objectStore = transaction.objectStore('brands');\n      const getRequest = objectStore.getAll();\n\n      getRequest.onsuccess = function (event: any) {\n        brands.value = event.target.result;\n      };\n    };\n\n    const fetchModelsFromDB = (): void => {\n      if (!db) return;\n      const transaction = db.transaction(['models'], 'readonly');\n      const objectStore = transaction.objectStore('models');\n      const getRequest = objectStore.getAll();\n\n      getRequest.onsuccess = function (event: any) {\n        models.value = event.target.result;\n      };\n    };\n\n    const addVehicleToDB = (brand: string, model: string, color: string, plate: string): void => {\n      if (!db) return;\n      const transaction = db.transaction(['vehicles'], 'readwrite');\n      const objectStore = transaction.objectStore('vehicles');\n      const register = new Date().toLocaleTimeString();\n      const vehicle = {\n        brand,\n        model,\n        color,\n        plate,\n        register,\n        update: null,\n        active: true,\n      };\n      objectStore.add(vehicle);\n      fetchVehiclesFromDB();\n    };\n\n    const updateVehicleInDB = (id: number): void => {\n      if (!db) return;\n      const transaction = db.transaction(['vehicles'], 'readwrite');\n      const objectStore = transaction.objectStore('vehicles');\n      const getRequest = objectStore.get(id);\n\n      getRequest.onsuccess = function () {\n        const data = getRequest.result;\n\n        const updatedBrand = prompt('Enter the updated Brand:', data.brand);\n        const updatedModel = prompt('Enter the updated Model:', data.model);\n        const updatedColor = prompt('Enter the updated Color:', data.color);\n        const updatedPlate = prompt('Enter the updated Plate:', data.plate);\n\n        if (updatedBrand && updatedModel && updatedColor && updatedPlate) {\n          data.brand = updatedBrand;\n          data.model = updatedModel;\n          data.color = updatedColor;\n          data.plate = updatedPlate;\n          data.update = new Date();\n          objectStore.put(data);\n          fetchVehiclesFromDB();\n        }\n      };\n    };\n\n    const deleteVehicleFromDB = (id: number): void => {\n      if (!db) return;\n      const transaction = db.transaction(['vehicles'], 'readwrite');\n      const objectStore = transaction.objectStore('vehicles');\n      objectStore.delete(id);\n      fetchVehiclesFromDB();\n    };\n\n    const fetchVehiclesFromDB = (): void => {\n      if (!db) return;\n      const transaction = db.transaction(['vehicles'], 'readonly');\n      const objectStore = transaction.objectStore('vehicles');\n      const getRequest = objectStore.getAll();\n\n      getRequest.onsuccess = function (event: any) {\n        vehicles.value = event.target.result;\n      };\n    };\n\n    const getBrandNameById = (brandId: number) => {\n      const brand = brands.value.find(b => b.id === brandId);\n      return brand ? brand.name : '';\n    };\n\n    const getModelNameById = (modelId: number) => {\n      const model = models.value.find(m => m.id === modelId);\n      return model ? model.name : '';\n    };\n\n    const createVehicle = (): void => {\n      if (newVehicleBrandId.value === null || newVehicleModelId.value === null || newVehiclePlate.value.trim() === '')\n        return;\n      addVehicleToDB(\n        newVehicleBrandId.value,\n        newVehicleModelId.value,\n        newVehicleColor.value,\n        newVehiclePlate.value\n      );\n    };\n\n    // Fetch vehicles from IndexedDB when the component is mounted\n    // onMounted(fetchVehiclesFromDB);\n    dbRequest.onsuccess = function (event: any) {\n      db = event.target.result;\n      fetchVehiclesFromDB();\n      fetchBrandsFromDB();\n      fetchModelsFromDB();\n    };\n\n    return {\n      newVehicleBrandId,\n      newVehicleModelId,\n      brands,\n      models,\n      newVehicleColor,\n      newVehiclePlate,\n      vehicles,\n      createVehicle,\n      updateVehicleInDB,\n      deleteVehicleFromDB,\n      getBrandNameById,\n      getModelNameById\n    };\n  },\n});\n","import { render } from \"./Vehicle.vue?vue&type=template&id=2879cb66&scoped=true&ts=true\"\nimport script from \"./Vehicle.vue?vue&type=script&lang=ts\"\nexport * from \"./Vehicle.vue?vue&type=script&lang=ts\"\n\nimport \"./Vehicle.vue?vue&type=style&index=0&id=2879cb66&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2879cb66\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_createStaticVNode","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_withDirectives","$event","newVehicleBrandId","_Fragment","_renderList","brands","brand","key","id","value","_toDisplayString","name","_vModelSelect","newVehicleModelId","models","model","newVehicleColor","newVehiclePlate","placeholder","_vModelText","onClick","args","createVehicle","vehicles","vehicle","index","getBrandNameById","getModelNameById","color","plate","updateVehicleInDB","deleteVehicleFromDB","defineComponent","setup","ref","db","dbRequest","window","indexedDB","open","onupgradeneeded","event","target","result","objectStoreNames","contains","vehicleStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","onsuccess","fetchVehiclesFromDB","fetchBrandsFromDB","transaction","objectStore","getRequest","getAll","fetchModelsFromDB","addVehicleToDB","register","Date","toLocaleTimeString","update","active","add","get","data","updatedBrand","prompt","updatedModel","updatedColor","updatedPlate","put","delete","brandId","find","b","modelId","m","trim","__exports__"],"sourceRoot":""}